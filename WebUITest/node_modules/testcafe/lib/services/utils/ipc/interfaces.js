"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/interface-name-prefix */
var IPCPacketType;
(function (IPCPacketType) {
    IPCPacketType[IPCPacketType["request"] = 0] = "request";
    IPCPacketType[IPCPacketType["response"] = 1] = "response";
})(IPCPacketType = exports.IPCPacketType || (exports.IPCPacketType = {}));
var IPCTransportEvents;
(function (IPCTransportEvents) {
    IPCTransportEvents["data"] = "data";
})(IPCTransportEvents = exports.IPCTransportEvents || (exports.IPCTransportEvents = {}));
/* eslint-enable @typescript-eslint/interface-name-prefix */
function isTestCafeErrorList(err) {
    return err.isTestCafeErrorList;
}
exports.isTestCafeErrorList = isTestCafeErrorList;
function isIPCErrorResponse(response) {
    return !!response.error;
}
exports.isIPCErrorResponse = isIPCErrorResponse;
function isIPCResponsePacket(message) {
    return ['id', 'type', 'sync', 'data'].every(prop => prop in message);
}
exports.isIPCResponsePacket = isIPCResponsePacket;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlcy91dGlscy9pcGMvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVlBLDZEQUE2RDtBQUM3RCxJQUFZLGFBR1g7QUFIRCxXQUFZLGFBQWE7SUFDckIsdURBQU8sQ0FBQTtJQUNQLHlEQUFRLENBQUE7QUFDWixDQUFDLEVBSFcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFHeEI7QUFnQ0QsSUFBWSxrQkFFWDtBQUZELFdBQVksa0JBQWtCO0lBQzFCLG1DQUFhLENBQUE7QUFDakIsQ0FBQyxFQUZXLGtCQUFrQixHQUFsQiwwQkFBa0IsS0FBbEIsMEJBQWtCLFFBRTdCO0FBV0QsNERBQTREO0FBRzVELFNBQWdCLG1CQUFtQixDQUFFLEdBQWtCO0lBQ25ELE9BQVEsR0FBeUIsQ0FBQyxtQkFBbUIsQ0FBQztBQUMxRCxDQUFDO0FBRkQsa0RBRUM7QUFFRCxTQUFnQixrQkFBa0IsQ0FBRSxRQUFrRDtJQUNsRixPQUFPLENBQUMsQ0FBRSxRQUE2QixDQUFDLEtBQUssQ0FBQztBQUNsRCxDQUFDO0FBRkQsZ0RBRUM7QUFFRCxTQUFnQixtQkFBbUIsQ0FBRSxPQUFlO0lBQ2hELE9BQU8sQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLENBQUM7QUFDekUsQ0FBQztBQUZELGtEQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW5zdWJzY3JpYmVGbiB9IGZyb20gJ2VtaXR0ZXJ5JztcbmltcG9ydCBFdmVudEVtaXR0ZXIgZnJvbSAnLi4vLi4vLi4vdXRpbHMvYXN5bmMtZXZlbnQtZW1pdHRlcic7XG5cblxuZXhwb3J0IHR5cGUgRXh0ZXJuYWxFcnJvciA9IEVycm9yIHwgVGVzdENhZmVFcnJvckxpc3Q7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGVzdENhZmVFcnJvckxpc3Qge1xuICAgIGlzVGVzdENhZmVFcnJvckxpc3Q6IGJvb2xlYW47XG5cbiAgICBpdGVtczogRXJyb3JbXTtcbn1cblxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2ludGVyZmFjZS1uYW1lLXByZWZpeCAqL1xuZXhwb3J0IGVudW0gSVBDUGFja2V0VHlwZSB7XG4gICAgcmVxdWVzdCxcbiAgICByZXNwb25zZVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIElQQ1BhY2tldCB7XG4gICAgaWQ6IG51bWJlcjtcbiAgICB0eXBlOiBJUENQYWNrZXRUeXBlO1xuICAgIHN5bmM6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVBDUmVxdWVzdERhdGEge1xuICAgIG5hbWU6IHN0cmluZztcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgYXJnczogYW55W107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVBDUmVxdWVzdFBhY2tldCBleHRlbmRzIElQQ1BhY2tldCB7XG4gICAgZGF0YTogSVBDUmVxdWVzdERhdGE7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVBDU3VjY2Vzc2Z1bFJlc3BvbnNlIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIHJlc3VsdDogYW55O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElQQ0Vycm9yUmVzcG9uc2Uge1xuICAgIGVycm9yOiBFeHRlcm5hbEVycm9yO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElQQ1Jlc3BvbnNlUGFja2V0IGV4dGVuZHMgSVBDUGFja2V0IHtcbiAgICBkYXRhOiBJUENTdWNjZXNzZnVsUmVzcG9uc2UgfCBJUENFcnJvclJlc3BvbnNlO1xufVxuXG5leHBvcnQgZW51bSBJUENUcmFuc3BvcnRFdmVudHMge1xuICAgIGRhdGEgPSAnZGF0YSdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUENUcmFuc3BvcnQgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAgIG9uKGV2ZW50OiBJUENUcmFuc3BvcnRFdmVudHMuZGF0YSwgaGFuZGxlcjogKGRhdGE6IElQQ1BhY2tldCkgPT4gUHJvbWlzZTx2b2lkPik6IFVuc3Vic2NyaWJlRm47XG5cbiAgICByZWFkKCk6IHZvaWQ7XG4gICAgd3JpdGUocGFja2V0OiBJUENQYWNrZXQpOiBQcm9taXNlPHZvaWQ+O1xuXG4gICAgcmVhZFN5bmMoKTogSVBDUmVzcG9uc2VQYWNrZXQ7XG4gICAgd3JpdGVTeW5jKHBhY2tldDogSVBDUGFja2V0KTogdm9pZDtcbn1cbi8qIGVzbGludC1lbmFibGUgQHR5cGVzY3JpcHQtZXNsaW50L2ludGVyZmFjZS1uYW1lLXByZWZpeCAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Rlc3RDYWZlRXJyb3JMaXN0IChlcnI6IEV4dGVybmFsRXJyb3IpOiBlcnIgaXMgVGVzdENhZmVFcnJvckxpc3Qge1xuICAgIHJldHVybiAoZXJyIGFzIFRlc3RDYWZlRXJyb3JMaXN0KS5pc1Rlc3RDYWZlRXJyb3JMaXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNJUENFcnJvclJlc3BvbnNlIChyZXNwb25zZTogSVBDU3VjY2Vzc2Z1bFJlc3BvbnNlIHwgSVBDRXJyb3JSZXNwb25zZSk6IHJlc3BvbnNlIGlzIElQQ0Vycm9yUmVzcG9uc2Uge1xuICAgIHJldHVybiAhIShyZXNwb25zZSBhcyBJUENFcnJvclJlc3BvbnNlKS5lcnJvcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzSVBDUmVzcG9uc2VQYWNrZXQgKG1lc3NhZ2U6IG9iamVjdCk6IG1lc3NhZ2UgaXMgSVBDUmVzcG9uc2VQYWNrZXQge1xuICAgIHJldHVybiBbJ2lkJywgJ3R5cGUnLCAnc3luYycsICdkYXRhJ10uZXZlcnkocHJvcCA9PiBwcm9wIGluIG1lc3NhZ2UpO1xufVxuIl19